name: Build & Push Image
on:
  push:
    branches:
      - master
    tags:
      - v*
  # All external PRs require approval to run actions
  pull_request: ~

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000

    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
      - name: build etcdmon image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: localhost:5000/etcdmon
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - uses: actions/setup-go@v3
        with:
          go-version: "^1.18.0"
      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            go-
      - name: Prepare test environment
        run: |
          ./fixtures/certs.sh
          ./fixtures/registry.sh
      - name: test
        run: go test

  publish:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: set up qemu
        # For aarch64 builder support
        uses: docker/setup-qemu-action@v2
      - name: set up buildx
        uses: docker/setup-buildx-action@v2
      - name: log in to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: extract tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
